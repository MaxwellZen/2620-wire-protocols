# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import chat_pb2 as chat__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create_account = channel.unary_unary(
                '/chat.Chat/create_account',
                request_serializer=chat__pb2.CreateAccount.SerializeToString,
                response_deserializer=chat__pb2.StatusReply.FromString,
                _registered_method=True)
        self.supply_pass = channel.unary_unary(
                '/chat.Chat/supply_pass',
                request_serializer=chat__pb2.SupplyPass.SerializeToString,
                response_deserializer=chat__pb2.StatusReply.FromString,
                _registered_method=True)
        self.login = channel.unary_unary(
                '/chat.Chat/login',
                request_serializer=chat__pb2.Login.SerializeToString,
                response_deserializer=chat__pb2.StatusReply.FromString,
                _registered_method=True)
        self.list_accounts = channel.unary_unary(
                '/chat.Chat/list_accounts',
                request_serializer=chat__pb2.ListAccounts.SerializeToString,
                response_deserializer=chat__pb2.ListAccountsReply.FromString,
                _registered_method=True)
        self.send = channel.unary_unary(
                '/chat.Chat/send',
                request_serializer=chat__pb2.Send.SerializeToString,
                response_deserializer=chat__pb2.StatusReply.FromString,
                _registered_method=True)
        self.read = channel.unary_unary(
                '/chat.Chat/read',
                request_serializer=chat__pb2.Read.SerializeToString,
                response_deserializer=chat__pb2.ReadReply.FromString,
                _registered_method=True)
        self.delete_msg = channel.unary_unary(
                '/chat.Chat/delete_msg',
                request_serializer=chat__pb2.DeleteMessages.SerializeToString,
                response_deserializer=chat__pb2.StatusReply.FromString,
                _registered_method=True)
        self.delete_account = channel.unary_unary(
                '/chat.Chat/delete_account',
                request_serializer=chat__pb2.DeleteAccount.SerializeToString,
                response_deserializer=chat__pb2.StatusReply.FromString,
                _registered_method=True)
        self.logout = channel.unary_unary(
                '/chat.Chat/logout',
                request_serializer=chat__pb2.Logout.SerializeToString,
                response_deserializer=chat__pb2.StatusReply.FromString,
                _registered_method=True)
        self.num_msg = channel.unary_unary(
                '/chat.Chat/num_msg',
                request_serializer=chat__pb2.NumMessages.SerializeToString,
                response_deserializer=chat__pb2.NumMessagesReply.FromString,
                _registered_method=True)


class ChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create_account(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def supply_pass(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_accounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_msg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_account(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def num_msg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create_account': grpc.unary_unary_rpc_method_handler(
                    servicer.create_account,
                    request_deserializer=chat__pb2.CreateAccount.FromString,
                    response_serializer=chat__pb2.StatusReply.SerializeToString,
            ),
            'supply_pass': grpc.unary_unary_rpc_method_handler(
                    servicer.supply_pass,
                    request_deserializer=chat__pb2.SupplyPass.FromString,
                    response_serializer=chat__pb2.StatusReply.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=chat__pb2.Login.FromString,
                    response_serializer=chat__pb2.StatusReply.SerializeToString,
            ),
            'list_accounts': grpc.unary_unary_rpc_method_handler(
                    servicer.list_accounts,
                    request_deserializer=chat__pb2.ListAccounts.FromString,
                    response_serializer=chat__pb2.ListAccountsReply.SerializeToString,
            ),
            'send': grpc.unary_unary_rpc_method_handler(
                    servicer.send,
                    request_deserializer=chat__pb2.Send.FromString,
                    response_serializer=chat__pb2.StatusReply.SerializeToString,
            ),
            'read': grpc.unary_unary_rpc_method_handler(
                    servicer.read,
                    request_deserializer=chat__pb2.Read.FromString,
                    response_serializer=chat__pb2.ReadReply.SerializeToString,
            ),
            'delete_msg': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_msg,
                    request_deserializer=chat__pb2.DeleteMessages.FromString,
                    response_serializer=chat__pb2.StatusReply.SerializeToString,
            ),
            'delete_account': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_account,
                    request_deserializer=chat__pb2.DeleteAccount.FromString,
                    response_serializer=chat__pb2.StatusReply.SerializeToString,
            ),
            'logout': grpc.unary_unary_rpc_method_handler(
                    servicer.logout,
                    request_deserializer=chat__pb2.Logout.FromString,
                    response_serializer=chat__pb2.StatusReply.SerializeToString,
            ),
            'num_msg': grpc.unary_unary_rpc_method_handler(
                    servicer.num_msg,
                    request_deserializer=chat__pb2.NumMessages.FromString,
                    response_serializer=chat__pb2.NumMessagesReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.Chat', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create_account(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/create_account',
            chat__pb2.CreateAccount.SerializeToString,
            chat__pb2.StatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def supply_pass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/supply_pass',
            chat__pb2.SupplyPass.SerializeToString,
            chat__pb2.StatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/login',
            chat__pb2.Login.SerializeToString,
            chat__pb2.StatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def list_accounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/list_accounts',
            chat__pb2.ListAccounts.SerializeToString,
            chat__pb2.ListAccountsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/send',
            chat__pb2.Send.SerializeToString,
            chat__pb2.StatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/read',
            chat__pb2.Read.SerializeToString,
            chat__pb2.ReadReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete_msg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/delete_msg',
            chat__pb2.DeleteMessages.SerializeToString,
            chat__pb2.StatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete_account(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/delete_account',
            chat__pb2.DeleteAccount.SerializeToString,
            chat__pb2.StatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/logout',
            chat__pb2.Logout.SerializeToString,
            chat__pb2.StatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def num_msg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.Chat/num_msg',
            chat__pb2.NumMessages.SerializeToString,
            chat__pb2.NumMessagesReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
